import type { PropertyInfo } from '../../../../../domain/types';
import type * as ts from 'typescript';
export interface PropertyCollectionResult {
    properties: PropertyInfo[];
    isRecursive: boolean;
    hasInheritance: boolean;
    heritageTypes: string[];
    hasOnlyIndexSignatures: boolean;
    indexSignatureType?: ts.TypeNode;
    indexSignatureKeyType?: ts.TypeNode;
    indexSignatureValueType?: ts.TypeNode;
}
export declare const collectInterfaceProperties: (interfaceDecl: ts.InterfaceDeclaration, allInterfaces?: ts.InterfaceDeclaration[]) => PropertyCollectionResult;
export declare const collectInheritedProperties: (interfaceDecl: ts.InterfaceDeclaration, allInterfaces: ts.InterfaceDeclaration[], heritageTypes: string[]) => PropertyInfo[];
export declare const collectCurrentProperties: (interfaceDecl: ts.InterfaceDeclaration, inheritedProps: PropertyInfo[]) => PropertyInfo[];
//# sourceMappingURL=property-collectors.d.ts.map