"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.generateInterfaceFile = void 0;
const path = __importStar(require("path"));
const imports_1 = require("../../../shared/utils/imports");
const generate_complete_file_1 = require("../code/generate-complete-file");
const interface_1 = require("../type-guard/interface");
const generateInterfaceFile = (interfaceDecl, guardName, outputDir, sourceFiles, allInterfaces, importMap) => {
    const fileName = `${guardName}.guardz.ts`;
    const hasGenerics = interfaceDecl.typeParameters && interfaceDecl.typeParameters.length > 0;
    let typeGuardCode = hasGenerics
        ? (0, interface_1.generateGenericInterfaceTypeGuard)(interfaceDecl, guardName, allInterfaces, sourceFiles, importMap)
        : (0, interface_1.generateInterfaceTypeGuard)(interfaceDecl, guardName, allInterfaces, sourceFiles, importMap);
    // Replace all isAsserted<{}> with isType({})
    typeGuardCode = typeGuardCode.replace(/isAsserted<\{\}>/g, 'isType({})');
    const importTypes = (0, imports_1.collectReferencedTypes)(interfaceDecl);
    const needsTypeGuardFnImport = hasGenerics;
    const content = (0, generate_complete_file_1.generateCompleteFile)(guardName, typeGuardCode, interfaceDecl.name.text, importTypes, fileName, outputDir, sourceFiles, needsTypeGuardFnImport, importMap, interfaceDecl.getSourceFile());
    return {
        fileName: path.join(outputDir, fileName),
        content,
        interfaceName: interfaceDecl.name.text,
    };
};
exports.generateInterfaceFile = generateInterfaceFile;
//# sourceMappingURL=generate-interface-file.js.map