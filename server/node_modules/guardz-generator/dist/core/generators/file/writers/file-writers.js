"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || (function () {
    var ownKeys = function(o) {
        ownKeys = Object.getOwnPropertyNames || function (o) {
            var ar = [];
            for (var k in o) if (Object.prototype.hasOwnProperty.call(o, k)) ar[ar.length] = k;
            return ar;
        };
        return ownKeys(o);
    };
    return function (mod) {
        if (mod && mod.__esModule) return mod;
        var result = {};
        if (mod != null) for (var k = ownKeys(mod), i = 0; i < k.length; i++) if (k[i] !== "default") __createBinding(result, mod, k[i]);
        __setModuleDefault(result, mod);
        return result;
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
exports.writeTypeAliasFile = exports.writeInterfaceFile = exports.writeGeneratedFile = void 0;
const fs = __importStar(require("fs"));
const path = __importStar(require("path"));
const writeGeneratedFile = (fileName, outputDir, buildResult) => {
    try {
        const filePath = path.join(outputDir, fileName);
        // Ensure output directory exists
        const dir = path.dirname(filePath);
        if (!fs.existsSync(dir)) {
            fs.mkdirSync(dir, { recursive: true });
        }
        // Write the file
        fs.writeFileSync(filePath, buildResult.content, 'utf8');
        return {
            success: true,
            filePath,
        };
    }
    catch (error) {
        return {
            success: false,
            filePath: path.join(outputDir, fileName),
            error: error instanceof Error ? error.message : 'Unknown error',
        };
    }
};
exports.writeGeneratedFile = writeGeneratedFile;
const writeInterfaceFile = (interfaceName, outputDir, buildResult) => {
    const fileName = `is${interfaceName}.guardz.ts`;
    return (0, exports.writeGeneratedFile)(fileName, outputDir, buildResult);
};
exports.writeInterfaceFile = writeInterfaceFile;
const writeTypeAliasFile = (typeAliasName, outputDir, buildResult) => {
    const fileName = `is${typeAliasName}.guardz.ts`;
    return (0, exports.writeGeneratedFile)(fileName, outputDir, buildResult);
};
exports.writeTypeAliasFile = writeTypeAliasFile;
//# sourceMappingURL=file-writers.js.map