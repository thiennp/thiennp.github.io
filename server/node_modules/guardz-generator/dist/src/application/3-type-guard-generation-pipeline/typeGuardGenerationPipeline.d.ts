import * as ts from 'typescript';
export interface TypeGuardGenerationContext {
    typesToProcess: Array<{
        typeName: string;
        node: ts.Node;
    }>;
    config?: Record<string, any>;
}
export interface TypeGuardGenerationResult {
    typeName: string;
    code: string;
}
export declare function typeGuardGenerationPipeline(strategies: Array<(ctx: {
    typeName: string;
    node: ts.Node;
    config?: Record<string, any>;
}) => Promise<string | undefined> | string | undefined>, context: TypeGuardGenerationContext): Promise<TypeGuardGenerationResult[]>;
//# sourceMappingURL=typeGuardGenerationPipeline.d.ts.map