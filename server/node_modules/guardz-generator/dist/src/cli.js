#!/usr/bin/env node
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const main_pipeline_1 = require("./core/main-pipeline");
const logger_1 = require("./utils/logger");
async function main() {
    try {
        logger_1.logger.step('CLI', 'Starting guardz-generator CLI');
        const args = process.argv.slice(2);
        const filesGlob = args.length > 0 ? args : undefined;
        logger_1.logger.info(`CLI arguments: ${args.join(' ')}`);
        logger_1.logger.info(`Files glob: ${filesGlob?.join(', ') || 'none'}`);
        if (!filesGlob || filesGlob.length === 0) {
            logger_1.logger.error('No files specified. Usage: guardz <files...>');
            process.exit(1);
        }
        logger_1.logger.step('CLI', 'Calling main pipeline');
        const result = await (0, main_pipeline_1.mainPipeline)({
            filesGlob,
        });
        logger_1.logger.step('CLI', 'Main pipeline completed successfully');
        logger_1.logger.result('CLI', {
            totalResults: result.length,
            results: result,
        });
        console.log(`Generated ${result.length} type guards`);
    }
    catch (error) {
        logger_1.logger.error(`CLI error: ${error instanceof Error ? error.message : String(error)}`);
        console.error('Error:', error);
        process.exit(1);
    }
    finally {
        logger_1.logger.step('CLI', 'Closing logger');
        logger_1.logger.close();
    }
}
main();
//# sourceMappingURL=cli.js.map