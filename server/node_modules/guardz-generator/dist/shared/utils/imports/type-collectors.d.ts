import * as ts from 'typescript';
export declare const collectReferencedTypes: (interfaceDecl: ts.InterfaceDeclaration) => string[];
export declare const collectReferencedTypesFromTypeAlias: (typeAliasDecl: ts.TypeAliasDeclaration, sourceFiles: ts.SourceFile[]) => string[];
export declare const collectUsedEnumsInCode: (typeGuardCode: string) => string[];
export declare const collectUsedGuardzUtilities: (typeGuardCode: string) => string[];
export declare const collectUsedTypeGuards: (typeGuardCode: string) => string[];
export declare const collectUsedGuardzTypeAliases: (typeGuardCode: string) => string[];
export declare const needsTypeGuardFn: (typeGuardCode: string) => boolean;
export declare const needsTypeGuardFnConfig: (typeGuardCode: string) => boolean;
export declare const isGuardzType: (typeName: string) => boolean;
export declare const collectAssertedTypesInCode: (typeGuardCode: string) => string[];
//# sourceMappingURL=type-collectors.d.ts.map