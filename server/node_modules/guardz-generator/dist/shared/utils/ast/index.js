"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getTypeName = exports.isExported = exports.isRecursiveOrCyclic = exports.detectCycles = exports.getAllReferencedTypes = exports.buildTypeDependendencyGraph = exports.isRecursiveType = exports.typeReferencesInterface = exports.formatTypeParameter = exports.extractTypeParametersFromInterface = exports.extractTypeParameters = exports.extractIndexSignatureTypes = exports.extractIndexSignatureType = exports.hasOnlyIndexSignatures = exports.extractHeritageClauses = exports.extractPropertiesWithInheritance = exports.extractPropertiesFromTypeLiteral = exports.extractProperties = void 0;
// Re-export all functions from modular files
var property_extractors_1 = require("./property-extractors");
Object.defineProperty(exports, "extractProperties", { enumerable: true, get: function () { return property_extractors_1.extractProperties; } });
Object.defineProperty(exports, "extractPropertiesFromTypeLiteral", { enumerable: true, get: function () { return property_extractors_1.extractPropertiesFromTypeLiteral; } });
Object.defineProperty(exports, "extractPropertiesWithInheritance", { enumerable: true, get: function () { return property_extractors_1.extractPropertiesWithInheritance; } });
Object.defineProperty(exports, "extractHeritageClauses", { enumerable: true, get: function () { return property_extractors_1.extractHeritageClauses; } });
Object.defineProperty(exports, "hasOnlyIndexSignatures", { enumerable: true, get: function () { return property_extractors_1.hasOnlyIndexSignatures; } });
Object.defineProperty(exports, "extractIndexSignatureType", { enumerable: true, get: function () { return property_extractors_1.extractIndexSignatureType; } });
Object.defineProperty(exports, "extractIndexSignatureTypes", { enumerable: true, get: function () { return property_extractors_1.extractIndexSignatureTypes; } });
var type_parameters_1 = require("./type-parameters");
Object.defineProperty(exports, "extractTypeParameters", { enumerable: true, get: function () { return type_parameters_1.extractTypeParameters; } });
Object.defineProperty(exports, "extractTypeParametersFromInterface", { enumerable: true, get: function () { return type_parameters_1.extractTypeParametersFromInterface; } });
Object.defineProperty(exports, "formatTypeParameter", { enumerable: true, get: function () { return type_parameters_1.formatTypeParameter; } });
var recursion_detection_1 = require("./recursion-detection");
Object.defineProperty(exports, "typeReferencesInterface", { enumerable: true, get: function () { return recursion_detection_1.typeReferencesInterface; } });
Object.defineProperty(exports, "isRecursiveType", { enumerable: true, get: function () { return recursion_detection_1.isRecursiveType; } });
Object.defineProperty(exports, "buildTypeDependendencyGraph", { enumerable: true, get: function () { return recursion_detection_1.buildTypeDependendencyGraph; } });
Object.defineProperty(exports, "getAllReferencedTypes", { enumerable: true, get: function () { return recursion_detection_1.getAllReferencedTypes; } });
Object.defineProperty(exports, "detectCycles", { enumerable: true, get: function () { return recursion_detection_1.detectCycles; } });
Object.defineProperty(exports, "isRecursiveOrCyclic", { enumerable: true, get: function () { return recursion_detection_1.isRecursiveOrCyclic; } });
var type_analysis_1 = require("./type-analysis");
Object.defineProperty(exports, "isExported", { enumerable: true, get: function () { return type_analysis_1.isExported; } });
Object.defineProperty(exports, "getTypeName", { enumerable: true, get: function () { return type_analysis_1.getTypeName; } });
//# sourceMappingURL=index.js.map