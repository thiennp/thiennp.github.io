import * as ts from 'typescript';
export declare class TypeDetectionAdapter {
    private sourceFiles;
    private allInterfaces;
    constructor(sourceFiles: ts.SourceFile[]);
    private collectAllInterfaces;
    collectAllDeclarations(): {
        interfaces: ts.InterfaceDeclaration[];
        typeAliases: ts.TypeAliasDeclaration[];
    };
    findInterfaceWithSourceFile(typeName: string): [ts.InterfaceDeclaration, ts.SourceFile] | null;
    findTypeAliasWithSourceFile(typeName: string): [ts.TypeAliasDeclaration, ts.SourceFile] | null;
    getAllInterfaces(): ts.InterfaceDeclaration[];
    isEnumType(typeName: string): boolean;
    isInterfaceType(typeName: string): boolean;
    isBuiltInType(typeName: string): boolean;
    isTypeAlias(typeName: string): boolean;
    findTypeSourceFile(typeName: string): string | undefined;
}
//# sourceMappingURL=type-detection.adapter.d.ts.map