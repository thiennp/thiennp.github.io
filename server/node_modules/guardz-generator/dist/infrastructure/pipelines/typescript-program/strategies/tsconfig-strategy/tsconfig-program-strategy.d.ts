import type { ProgramCreationOptions, ProgramCreationResult, IProgramCreationStrategy } from '../../interfaces';
/**
 * tsconfig Strategy for TypeScript Program Creation
 *
 * Creates TypeScript programs using tsconfig.json configuration files.
 * This strategy has medium priority and is used when a tsconfig.json file is available.
 */
export declare class TsConfigProgramStrategy implements IProgramCreationStrategy {
    /**
     * Create a TypeScript program using tsconfig.json
     * @param options Program creation options
     * @returns Promise resolving to created program result
     */
    createProgram(options: ProgramCreationOptions): Promise<ProgramCreationResult>;
    /**
     * Check if this strategy can create a program
     * @param options Program creation options
     * @returns Promise resolving to true if strategy can create a program
     */
    canCreateProgram(options: ProgramCreationOptions): Promise<boolean>;
    /**
     * Resolve tsconfig.json path
     * @param tsConfigPath Optional tsconfig path
     * @returns Resolved tsconfig path
     */
    private resolveTsConfigPath;
    /**
     * Read and parse tsconfig.json file
     * @param tsConfigPath Path to tsconfig.json
     * @returns Parsed tsconfig configuration
     */
    private readTsConfigFile;
    /**
     * Parse compiler options from tsconfig
     * @param config Parsed tsconfig configuration
     * @returns Compiler options
     */
    private parseCompilerOptions;
    /**
     * Resolve files from tsconfig include/exclude patterns
     * @param config Parsed tsconfig configuration
     * @param tsConfigPath Path to tsconfig.json
     * @returns Resolved file paths
     */
    private resolveTsConfigFiles;
}
//# sourceMappingURL=tsconfig-program-strategy.d.ts.map