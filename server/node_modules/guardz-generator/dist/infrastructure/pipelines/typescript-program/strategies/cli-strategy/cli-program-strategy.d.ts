import type { ProgramCreationOptions, ProgramCreationResult, IProgramCreationStrategy } from '../../interfaces';
/**
 * CLI Strategy for TypeScript Program Creation
 *
 * Creates TypeScript programs using CLI-provided options and custom compiler settings.
 * This strategy has the highest priority and is used when CLI options are provided.
 */
export declare class CliProgramStrategy implements IProgramCreationStrategy {
    /**
     * Create a TypeScript program using CLI options
     * @param options Program creation options
     * @returns Promise resolving to created program result
     */
    createProgram(options: ProgramCreationOptions): Promise<ProgramCreationResult>;
    /**
     * Check if this strategy can create a program
     * @param options Program creation options
     * @returns Promise resolving to true if strategy can create a program
     */
    canCreateProgram(options: ProgramCreationOptions): Promise<boolean>;
    /**
     * Build compiler options from CLI options
     * @param options Program creation options
     * @returns Compiler options
     */
    private buildCompilerOptions;
    /**
     * Parse target string to ScriptTarget
     * @param target Target string
     * @returns ScriptTarget
     */
    private parseTarget;
    /**
     * Parse module string to ModuleKind
     * @param module Module string
     * @returns ModuleKind
     */
    private parseModule;
}
//# sourceMappingURL=cli-program-strategy.d.ts.map