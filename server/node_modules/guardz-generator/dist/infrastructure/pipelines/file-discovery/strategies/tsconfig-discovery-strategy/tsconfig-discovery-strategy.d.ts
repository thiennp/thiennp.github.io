import type { FileDiscoveryOptions } from '../../interfaces';
/**
 * tsconfig Discovery Strategy
 *
 * Discovers TypeScript files from tsconfig.json configuration files.
 * This strategy processes:
 * - Include patterns from tsconfig.json
 * - Exclude patterns from tsconfig.json
 * - Default TypeScript patterns when no includes specified
 *
 * Priority: Lowest - Used as fallback when CLI and config strategies return no files
 */
export declare class TsConfigDiscoveryStrategy {
    /**
     * Discover files from tsconfig.json
     * @param options tsconfig discovery options
     * @returns Promise resolving to discovered file paths
     */
    discoverFiles(options: FileDiscoveryOptions): Promise<string[]>;
    /**
     * Check if tsconfig file exists and has file specifications
     * @param options tsconfig discovery options
     * @returns Promise resolving to true if tsconfig has file specifications
     */
    hasFileSpecifications(options: FileDiscoveryOptions): Promise<boolean>;
    /**
     * Get the default tsconfig file path
     * @returns Default tsconfig file path
     */
    getDefaultTsConfigPath(): string;
    /**
     * Get default TypeScript patterns
     * @returns Array of default TypeScript file patterns
     */
    getDefaultPatterns(): string[];
    /**
     * Get default ignore patterns
     * @returns Array of default ignore patterns
     */
    getDefaultIgnorePatterns(): string[];
}
//# sourceMappingURL=tsconfig-discovery-strategy.d.ts.map