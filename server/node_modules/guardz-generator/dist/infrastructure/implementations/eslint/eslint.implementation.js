"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ESLintImplementation = void 0;
class ESLintImplementation {
    processExecutor;
    logger;
    constructor(processExecutor, logger) {
        this.processExecutor = processExecutor;
        this.logger = logger;
    }
    async fixFile(filePath) {
        return this.fixFiles([filePath]);
    }
    async fixFiles(filePaths) {
        if (filePaths.length === 0) {
            return;
        }
        try {
            const command = `npx eslint --fix ${filePaths.join(' ')}`;
            const result = await this.processExecutor.execute(command);
            if (result.stderr) {
                this.logger.warn('ESLint --fix completed with warnings', result.stderr);
            }
        }
        catch (error) {
            this.logger.warn('ESLint --fix failed:', error);
            // Don't throw - post-processing errors shouldn't fail the entire process
        }
    }
}
exports.ESLintImplementation = ESLintImplementation;
//# sourceMappingURL=eslint.implementation.js.map